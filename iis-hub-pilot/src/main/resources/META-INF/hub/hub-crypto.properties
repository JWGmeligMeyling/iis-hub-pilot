#================================================================================
# CIPHER SUITES
#================================================================================
##
# Derived from specifications + recommendations in:
# - Transport Layer Security (http://en.wikipedia.org/wiki/Secure_Sockets_Layer).
#   See Sections 2.5 TLS 1.2 (http://en.wikipedia.org/wiki/Secure_Sockets_Layer#TLS_1.2),
#   3.3 Cipher (http://en.wikipedia.org/wiki/Secure_Sockets_Layer#Cipher), and
#   4.4 Attacks against TLS/SSL (http://en.wikipedia.org/wiki/Secure_Sockets_Layer#Attacks_against_TLS.2FSSL).
# - Mozilla Recommendations for Server Side TLS (https://wiki.mozilla.org/Security/Server_Side_TLS).
# - RFC5246 - The Transport Layer Security (TLS) Protocol Version 1.2 (http://tools.ietf.org/html/rfc5246).
#   See Appendix C. Cipher Suite Definitions (http://tools.ietf.org/html/rfc5246#appendix-C).
# - RFC5288 - AES Galois Counter Mode (GCM) Cipher Suites for TLS (http://tools.ietf.org/html/rfc5288).
#   See Section 3. AES-GCM Cipher Suites (http://tools.ietf.org/html/rfc5288#section-3).
# - RFC5289 - TLS Elliptic Curve Cipher Suites with SHA-256/384 and AES Galois Counter Mode (GCM) (http://tools.ietf.org/html/rfc5289).
#   See Section 3. Cipher Suites (http://tools.ietf.org/html/rfc5289#section-3).
##
hub.crypto.cipher.suites=\
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,\
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,\
    TLS_ECDHE_RSA_WITH_AES_256_SHA384,\
    TLS_ECDHE_ECDSA_WITH_AES_256_SHA384,\
    TLS_ECDHE_RSA_WITH_AES_128_SHA256,\
    TLS_ECDHE_ECDSA_WITH_AES_128_SHA256,\
    TLS_DHE_RSA_WITH_AES_256_SHA256,\
    TLS_DHE_RSA_WITH_AES_128_SHA256,\
    TLS_DHE_DSS_WITH_AES_128_SHA256,\
    TLS_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,\
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_DHE_DSS_WITH_AES_256_SHA256,\
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDH_RSA_WITH_AES_256_SHA384,\
    TLS_ECDH_ECDSA_WITH_AES_256_SHA384,\
    TLS_RSA_WITH_AES_256_SHA256,\
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,\
    TLS_ECDH_RSA_WITH_AES_128_SHA256,\
    TLS_ECDH_ECDSA_WITH_AES_128_SHA256,\
    TLS_RSA_WITH_AES_128_SHA256

#================================================================================
# KEY MANAGER STORE
#================================================================================
hub.crypto.mgr.key.store.file=${hub.data.ssl.dir}/%{project.artifactId}_store_key.p12
hub.crypto.mgr.key.store.pass=pass

#================================================================================
# KEY MANAGER STORE ENTRY: SERVER
#================================================================================
hub.crypto.mgr.key.store.entry.server.alias=%{project.artifactId}_server
hub.crypto.mgr.key.store.entry.server.pass=${hub.crypto.mgr.key.store.pass}

#================================================================================
# KEY MANAGER STORE ENTRY: DEVELOPMENT CLIENT
#================================================================================
hub.crypto.mgr.key.store.entry.client.dev.alias=%{project.artifactId}_client_dev
hub.crypto.mgr.key.store.entry.client.dev.pass=${hub.crypto.mgr.key.store.pass}

#================================================================================
# TRUST MANAGER STORE
#================================================================================
hub.crypto.mgr.trust.store.file=${hub.data.ssl.dir}/%{project.artifactId}_store_trust.p12
hub.crypto.mgr.trust.store.pass=pass
