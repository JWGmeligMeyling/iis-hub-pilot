<?xml version="1.0" encoding="UTF-8"?>
<project
    name="hub"
    xmlns="antlib:org.apache.tools.ant"
    xmlns:hub="antlib:gov.hhs.onc.iishubpilot.ant"
    xmlns:hub-java="antlib:gov.hhs.onc.iishubpilot.ant.java"
    xmlns:hub-props="antlib:gov.hhs.onc.iishubpilot.ant.props"
    xmlns:props="antlib:org.apache.ant.props"
    xmlns:res-cmp="antlib:org.apache.tools.ant.types.resources.comparators"
    xmlns:res-sel="antlib:org.apache.tools.ant.types.resources.selectors">
    
    <description>Ant project for common components of Immunization Information Services (IIS) Hub Pilot Ant projects.</description>
    
    <typedef name="javaconstantresource" classname="org.apache.tools.ant.types.resources.JavaConstantResource"/>
    
    <script language="beanshell"><![CDATA[
        import java.io.File;
        import org.apache.tools.ant.BuildException;
        import org.apache.tools.ant.Project;
        import org.apache.tools.ant.ProjectHelper;
        import org.apache.tools.ant.taskdefs.DefBase;
        import org.apache.tools.ant.util.ScriptRunnerHelper;
        
        public class ScriptComponentDef extends DefBase {
            private ScriptRunnerHelper runnerHelper = new ScriptRunnerHelper();
            private String name;
            
            public void execute() throws BuildException {
                super.execute();
                
                this.project.addDataTypeDefinition((this.uri + ":" + this.name), this.runnerHelper.scriptRunner.evaluateScript("ANT"));
            }
            
            public void addText(String text) {
                this.runnerHelper.addText(text);
            }
            
            public void setLanguage(String lang) {
                this.runnerHelper.setLanguage(lang);
            }
            
            public void setManager(String mgr) {
                this.runnerHelper.manager = mgr;
            }
            
            public void setName(String name) {
                this.name = name;
            }
            
            public void setProject(Project project) {
                super.setProject(project);
                
                this.runnerHelper.setProjectComponent(this);
            }
            
            public void setSetBeans(boolean setBeans) {
                this.runnerHelper.setBeans = setBeans;
            }
            
            public void setSrc(String srcFilePath) {
                this.runnerHelper.src = new File(srcFilePath);
            }
        }
        
        project.addTaskDefinition((ProjectHelper.ANTLIB_URI + "gov.hhs.onc.iishubpilot.ant:" + ScriptComponentDef.class.simpleName.toLowerCase()),
            ScriptComponentDef.class);
    ]]></script>
    
    <hub:scriptcomponentdef name="strings" language="beanshell" uri="antlib:gov.hhs.onc.iishubpilot.ant.props"><![CDATA[
        import java.util.Objects;
        import org.apache.ant.props.DelegatingPropertyEvaluator;
        import org.apache.ant.props.RegexBasedEvaluator;
        import org.apache.commons.lang3.StringUtils;
        import org.apache.tools.ant.PropertyHelper;
        
        public abstract class AbstractStringPropertyEvaluator extends RegexBasedEvaluator {
            protected AbstractStringPropertyEvaluator(String propPattern) {
                super(propPattern);
            }
            
            protected Object evaluate(String[] propGroups, PropertyHelper propHelper) {
                return Objects.toString(propHelper.getProperty(propGroups[1]), null);
            }
        }
        
        public class StringDefaultPropertyEvaluator extends AbstractStringPropertyEvaluator {
            public StringDefaultPropertyEvaluator() {
                super("(.*):([\\-\\+])(~{1,2})(.*)");
            }
            
            protected Object evaluate(String[] propGroups, PropertyHelper propHelper) {
                String propValue = ((String) super.evaluate(propGroups, propHelper));
                boolean propValueEval = ((propGroups[3].length() == 1) ? StringUtils.isEmpty(propValue) : StringUtils.isBlank(propValue));
                
                return (((propValueEval && propGroups[2].equals("-")) || (!propValueEval && propGroups[2].equals("+"))) ? propGroups[4] : StringUtils.EMPTY);
            }
        }
        
        public class StringCasePropertyEvaluator extends AbstractStringPropertyEvaluator {
            public StringCasePropertyEvaluator() {
                super("(.*)(^{2}|,{2})");
            }
            
            protected Object evaluate(String[] propGroups, PropertyHelper propHelper) {
                String propValue = ((String) super.evaluate(propGroups, propHelper));
                
                return ((propGroups[2].equals("^^")) ? StringUtils.upperCase(propValue) : StringUtils.lowerCase(propValue));
            }
        }
        
        public class DelegatingStringPropertyEvaluator extends DelegatingPropertyEvaluator {
            public DelegatingStringPropertyEvaluator() {
                this.addDelegate(new StringDefaultPropertyEvaluator());
                this.addDelegate(new StringCasePropertyEvaluator());
            }
        }
        
        return DelegatingStringPropertyEvaluator.class;
    ]]></hub:scriptcomponentdef>
    
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>
    
    <typedef name="islessthan" classname="net.sf.antcontrib.logic.condition.IsLessThan"/>
    <typedef name="isgreaterthan" classname="net.sf.antcontrib.logic.condition.IsGreaterThan"/>
    <typedef name="ispropertyfalse" classname="net.sf.antcontrib.logic.condition.IsPropertyFalse"/>
    <typedef name="ispropertytrue" classname="net.sf.antcontrib.logic.condition.IsPropertyTrue"/>
    
    <taskdef resource="org/apache/ant/props/antlib.xml" uri="antlib:org.apache.ant.props"/>
    
    <propertyhelper>
        <props:conditions/>
        <props:encodeURL/>
        <props:nested/>
        <props:stringops/>
        <props:types/>
        <hub-props:strings/>
    </propertyhelper>
    
    <taskdef file="antlib-hub.xml" uri="antlib:gov.hhs.onc.iishubpilot.ant"/>
    <taskdef file="antlib-hub-java.xml" uri="antlib:gov.hhs.onc.iishubpilot.ant.java"/>
    
    <target name="hub-init">
        <property environment="env"/>
        
        <var name="n" value="&#xA;"/>
    </target>
</project>
