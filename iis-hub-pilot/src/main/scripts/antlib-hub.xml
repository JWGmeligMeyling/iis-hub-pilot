<?xml version="1.0" encoding="UTF-8"?>
<antlib
    xmlns="antlib:org.apache.tools.ant"
    xmlns:current="ant:current"
    xmlns:res-cmp="antlib:org.apache.tools.ant.types.resources.comparators"
    xmlns:res-sel="antlib:org.apache.tools.ant.types.resources.selectors">
    
    <presetdef name="isempty">
        <length length="0"/>
    </presetdef>
    
    <presetdef name="unset">
        <var unset="true"/>
    </presetdef>
    
    <macrodef name="write-properties">
        <attribute name="file"/>
        <attribute name="props"/>
        <attribute name="append" default="false"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <attribute name="sort" default="true"/>
        <element name="write-properties.elements" optional="true" implicit="true"/>
        <text name="write-properties.text" optional="true"/>
        <sequential>
            <var name="write-properties.props" value="@{props},@{write-properties.text}"/>
            
            <if>
                <istrue value="@{sort}"/>
                <then>
                    <sortlist property="write-properties.props" override="true" value="${write-properties.props}"/>
                </then>
            </if>
            
            <var name="write-properties.props.content"/>
            
            <for list="${write-properties.props}" param="write-properties.prop" trim="true">
                <sequential>
                    <if>
                        <and>
                            <not><current:isempty string="@{write-properties.prop}"/></not>
                            <isset property="@{write-properties.prop}"/>
                        </and>
                        <then>
                            <var name="write-properties.props.content"
                                value="${write-properties.props.content}@{write-properties.prop}=${@{write-properties.prop}}${n}"/>
                        </then>
                    </if>
                </sequential>
            </for>
            
            <current:write-file file="@{file}" append="@{append}" encoding="@{encoding}">
                <resources>
                    <propertyresource name="write-properties.props.content"/>
                </resources>
            </current:write-file>
        </sequential>
    </macrodef>
    
    <macrodef name="filter-file">
        <attribute name="file"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="filter-file.elements" implicit="true"/>
        <sequential>
            <current:read-file file="@{file}" property="filter-file.file.content" encoding="@{encoding}">
                <filterchain>
                    <filter-file.elements/>
                </filterchain>
            </current:read-file>
            <current:write-file file="@{file}" encoding="@{encoding}">
                <resources>
                    <propertyresource name="filter-file.file.content"/>
                </resources>
            </current:write-file>
        </sequential>
    </macrodef>
    
    <macrodef name="write-file">
        <attribute name="file"/>
        <attribute name="append" default="false"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="write-file.elements" optional="true" implicit="true"/>
        <sequential>
            <concat destfile="@{file}" append="@{append}" encoding="@{encoding}">
                <write-file.elements/>
            </concat>
        </sequential>
    </macrodef>
    
    <macrodef name="read-file">
        <attribute name="file"/>
        <attribute name="property"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="read-file.elements" optional="true" implicit="true"/>
        <sequential>
            <current:unset name="@{property}"/>
            
            <loadfile srcFile="@{file}" property="@{property}" encoding="@{encoding}">
                <read-file.elements/>
            </loadfile>
        </sequential>
    </macrodef>
</antlib>