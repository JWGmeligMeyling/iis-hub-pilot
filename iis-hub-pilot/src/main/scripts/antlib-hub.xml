<?xml version="1.0" encoding="UTF-8"?>
<antlib
    xmlns="antlib:org.apache.tools.ant"
    xmlns:current="ant:current"
    xmlns:res-cmp="antlib:org.apache.tools.ant.types.resources.comparators"
    xmlns:res-sel="antlib:org.apache.tools.ant.types.resources.selectors">
    
    <current:scriptcomponentdef name="propertylist" language="beanshell"><![CDATA[
        import java.util.Iterator;
        import java.util.Set;
        import java.util.LinkedHashSet;
        import java.util.TreeSet;
        import org.apache.commons.lang3.StringUtils;
        import org.apache.tools.ant.ProjectHelper;
        import org.apache.tools.ant.types.PropertySet;
        import org.apache.tools.ant.types.resources.StringResource;
        
        public class PropertyList extends PropertySet {
            public Iterator iterator() {
                Set propNameResources = new LinkedHashSet();
                
                for (String propName : new TreeSet(this.getPropertyMap().keySet())) {
                    propNameResources.add(new StringResource(propName));
                }
                
                return propNameResources.iterator();
            }
            
            public String toString() {
                return StringUtils.join(this.iterator(), ",");
            }
        }
        
        return PropertyList.class;
    ]]></current:scriptcomponentdef>
    
    <presetdef name="isempty">
        <length length="0"/>
    </presetdef>
    
    <presetdef name="unset">
        <var unset="true"/>
    </presetdef>
    
    <macrodef name="filter-file">
        <attribute name="file"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="filter-file.elements" implicit="true"/>
        <sequential>
            <local name="filter-file.file.content"/>
            
            <current:read-file file="@{file}" property="filter-file.file.content" encoding="@{encoding}">
                <filter-file.elements/>
            </current:read-file>
            <current:write-file file="@{file}" encoding="@{encoding}">
                <propertyresource name="filter-file.file.content"/>
            </current:write-file>
        </sequential>
    </macrodef>
    
    <macrodef name="write-file">
        <attribute name="file"/>
        <attribute name="append" default="false"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="write-file.elements" optional="true" implicit="true"/>
        <sequential>
            <concat destfile="@{file}" append="@{append}" encoding="@{encoding}">
                <write-file.elements/>
            </concat>
        </sequential>
    </macrodef>
    
    <macrodef name="read-file">
        <attribute name="file"/>
        <attribute name="property"/>
        <attribute name="encoding" default="${project.build.sourceEncoding}"/>
        <element name="read-file.elements" implicit="true"/>
        <sequential>
            <current:unset name="@{property}"/>
            
            <loadfile srcFile="@{file}" property="@{property}" encoding="@{encoding}">
                <read-file.elements/>
            </loadfile>
        </sequential>
    </macrodef>
</antlib>